RSS_model.py 实现的是有空间结构的模型，可以实现论文中的实验1、实验3、实验4
Mean-Field_model.py 实现的是无空间结构的均场模型，可以实现论文中的实验2

实现结果与论文有差距的话，除了代码上的个人理解偏差以外，应该是来自超参数的选取，以下介绍超参数。

每个Python脚本文件内
## Hyper-parameters
后的代码块

以RSS_model.py为例以下的内容为超参数，分别对应：
R, S, T, P = [3, 0, 5, 1] # 论文中自己合作、背叛与对手合作、背叛产生的4种情况相对自己的奖励值，与论文中记号一致。
ref0 = 100 # 每个槽（chunk）的初始引用值。
num_nei = 1 # 邻居指数，对于随机邻居，则为真实邻居数量；对于摩尔邻居（定义请见英文维基百科），会在初始化时作为圈数，被重新赋值为(2 * num_nei + 1) ** 2 - 1，之后再被作为邻居数量使用；对于冯诺依曼邻居，会在初始化时作为步数，被重新赋值为2 * num_nei * (num_nei + 1)，之后作为邻居数量使用。
type_nei = 'v' # 实验采用邻居类型：r(andom)随机，m(oore)摩尔邻居，v(on)冯诺依曼邻居。
size_row, size_col = [10, 10] # 网格的尺寸，对计算速度影响较大，在以随机邻居或者均场模型模式运行时只有乘积有意义（总个体数）。建议采用偶数，否则可能出错。
d =  0.5 # 遗忘比率，来自论文。
s = 0.25 # 噪声参数，来自论文。
window_size = int(1e4) # 一个滑窗内的代数，论文建议1e4.滑窗内的各代信息被均值化统计。
window_num = 20 # 总共滑窗数，论文建议20。
diff_tol = 1e-3 # 当两相邻滑窗的fc值相减保持在此阈值之下时，认为达到渐进稳定。程序会判断哪些滑窗点达到渐进稳定，在图上以绿色点表示。绿色线表示渐进稳定值（由渐进稳定点取均值得到），此时图标题会出现渐进稳定值。

Mean-Field_model.py内的实现是由RSS_model.py的随机邻居算法修改得来，在每一代重新匹配邻居对，进行一个有记忆的PD博弈。参数有所删除，计算方式为大批量离散计算有一定优化。